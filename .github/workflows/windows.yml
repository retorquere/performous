name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        ref: newest_win_branch

    - uses: actions/checkout@v2
      with:
        repository: mxe/mxe
        path: mxe
      
    - name: Install build dependencies
      run: sudo apt-get install autoconf automake autopoint bash bison bzip2 flex g++ g++-multilib gettext git gperf intltool libc6-dev-i386 libgdk-pixbuf2.0-dev libltdl-dev libssl-dev libtool-bin libxml-parser-perl lzip make openssl p7zip-full patch perl python ruby sed unzip wget xz-utils

    - name: Configure mxe
      run: cp ${{runner.workspace}}/win32/mxe/settings.mk ${{runner.workspace}}/mxe

    - name: Build mxe
      shell: bash
      working-directory: ${{runner.workspace}}/mxe
      run: make -j4

    - name: Create build environment
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: mkdir build

    - name: Prepare build environment
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake .. -DPKG_CONFIG_EXECUTABLE=$MXE_PREFIX/usr/bin/$MXE_TARGET-pkg-config -DCMAKE_TOOLCHAIN_FILE=$MXE_PREFIX/usr/$MXE_TARGET/share/cmake/mxe-conf.cmake -DBoost_THREAD_LIBRARY_RELEASE=$MXE_PREFIX/usr/$MXE_TARGET/bin/libboost_thread_win32-mt.dll -DENABLE_WEBCAM=OFF -DENABLE_WEBSERVER=OFF
      env:
        MXE_PREFIX: ${{runner.workspace}}/mxe
        MXE_TARGET: i686-w64-mingw32.shared

    - name: Build performous
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: make -j4

    - name: Show build results
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: "find . -type f -name '*.exe'"
